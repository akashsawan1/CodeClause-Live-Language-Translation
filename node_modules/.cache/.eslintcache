[{"/home/aKASH/CodeClause-Live-Language-Translation/src/index.js":"1","/home/aKASH/CodeClause-Live-Language-Translation/src/App.js":"2","/home/aKASH/CodeClause-Live-Language-Translation/src/reportWebVitals.js":"3","/home/aKASH/CodeClause-Live-Language-Translation/src/components/Footer.js":"4","/home/aKASH/CodeClause-Live-Language-Translation/src/components/Translate.js":"5","/home/aKASH/CodeClause-Live-Language-Translation/src/data.js":"6","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/index.js":"7","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/App.js":"8","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/reportWebVitals.js":"9","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/components/Footer.js":"10","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/components/Translate.js":"11","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/data.js":"12"},{"size":535,"mtime":1690705137788,"results":"13","hashOfConfig":"14"},{"size":218,"mtime":1690705137788,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1690705137788,"results":"16","hashOfConfig":"14"},{"size":648,"mtime":1690706330653,"results":"17","hashOfConfig":"14"},{"size":4302,"mtime":1690705137788,"results":"18","hashOfConfig":"14"},{"size":2150,"mtime":1690705137788,"results":"19","hashOfConfig":"14"},{"size":535,"mtime":1690705137788,"results":"20","hashOfConfig":"21"},{"size":218,"mtime":1690705137788,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1690705137788,"results":"23","hashOfConfig":"21"},{"size":648,"mtime":1690706330653,"results":"24","hashOfConfig":"21"},{"size":4302,"mtime":1690705137788,"results":"25","hashOfConfig":"21"},{"size":2150,"mtime":1690705137788,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"152j46y",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mo4x1v",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aKASH/CodeClause-Live-Language-Translation/src/index.js",[],[],"/home/aKASH/CodeClause-Live-Language-Translation/src/App.js",[],[],"/home/aKASH/CodeClause-Live-Language-Translation/src/reportWebVitals.js",[],[],"/home/aKASH/CodeClause-Live-Language-Translation/src/components/Footer.js",[],[],"/home/aKASH/CodeClause-Live-Language-Translation/src/components/Translate.js",[],[],"/home/aKASH/CodeClause-Live-Language-Translation/src/data.js",[],[],"/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/index.js",[],[],"/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/App.js",[],[],"/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/reportWebVitals.js",[],[],"/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/components/Footer.js",[],[],"/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/components/Translate.js",["64","65","66","67","68"],[],"import React, { useEffect } from \"react\";\nimport countries from \"../data\";\nconst Translate = () => {\n  // eslint eqeqeq: 0;\n  useEffect(() => {\n    const fromText = document.querySelector(\".from-text\");\n    const toText = document.querySelector(\".to-text\");\n    const exchageIcon = document.querySelector(\".exchange\");\n    const selectTag = document.querySelectorAll(\"select\");\n    const icons = document.querySelectorAll(\".row i\");\n    const translateBtn = document.querySelector(\"button\");\n    selectTag.forEach((tag, id) => {\n      for (let country_code in countries) {\n        let selected =\n          id == 0\n            ? country_code == \"en-GB\"\n              ? \"selected\"\n              : \"\"\n            : country_code == \"hi-IN\"\n            ? \"selected\"\n            : \"\";\n        let option = `<option ${selected} value=\"${country_code}\">${countries[country_code]}</option>`;\n        tag.insertAdjacentHTML(\"beforeend\", option);\n      }\n    });\n\n    exchageIcon.addEventListener(\"click\", () => {\n      console.log(\"helo\");\n      let tempText = fromText.value;\n      let tempLang = selectTag[0].value;\n      console.log(tempText);\n      console.log(tempLang);\n      fromText.value = toText.value;\n      toText.value = tempText;\n      selectTag[0].value = selectTag[1].value;\n      selectTag[1].value = tempLang;\n    });\n\n    fromText.addEventListener(\"keyup\", () => {\n      if (!fromText.value) {\n        toText.value = \"\";\n      }\n    });\n\n    translateBtn.addEventListener(\"click\", () => {\n      let text = fromText.value.trim();\n      let translateFrom = selectTag[0].value;\n      let translateTo = selectTag[1].value;\n      if (!text) return;\n      toText.setAttribute(\"placeholder\", \"Translating...\");\n      let apiUrl = `https://api.mymemory.translated.net/get?q=${text}&langpair=${translateFrom}|${translateTo}`;\n      fetch(apiUrl)\n        .then((res) => res.json())\n        .then((data) => {\n          toText.value = data.responseData.translatedText;\n          data.matches.forEach((data) => {\n            if (data.id === 0) {\n              toText.value = data.translation;\n            }\n          });\n          toText.setAttribute(\"placeholder\", \"Translation\");\n        });\n    });\n\n    icons.forEach((icon) => {\n      icon.addEventListener(\"click\", ({ target }) => {\n        if (!fromText.value || !toText.value) return;\n        if (target.classList.contains(\"fa-copy\")) {\n          if (target.id == \"from\") {\n            navigator.clipboard.writeText(fromText.value);\n          } else {\n            navigator.clipboard.writeText(toText.value);\n          }\n        } else {\n          let utterance;\n          if (target.id == \"from\") {\n            utterance = new SpeechSynthesisUtterance(fromText.value);\n            utterance.lang = selectTag[0].value;\n          } else {\n            utterance = new SpeechSynthesisUtterance(toText.value);\n            utterance.lang = selectTag[1].value;\n          }\n          speechSynthesis.speak(utterance);\n        }\n      });\n    });\n  }, []);\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"text-input\">\n            <textarea\n              spellCheck=\"false\"\n              className=\"from-text\"\n              placeholder=\"Enter text\"\n            ></textarea>\n            <textarea\n              spellCheck=\"false\"\n              readOnly\n              disabled\n              className=\"to-text\"\n              placeholder=\"Translation\"\n            ></textarea>\n          </div>\n          <ul className=\"controls\">\n            <li className=\"row from\">\n              <div className=\"icons\">\n                <i id=\"from\" className=\"fas fa-volume-up\"></i>\n                <i id=\"from\" className=\"fas fa-copy\"></i>\n              </div>\n              <select></select>\n            </li>\n            <li className=\"exchange\">\n              <i className=\"fas fa-exchange-alt\"></i>\n            </li>\n            <li className=\"row to\">\n              <select></select>\n              <div className=\"icons\">\n                <i id=\"to\" className=\"fas fa-volume-up\"></i>\n                <i id=\"to\" className=\"fas fa-copy\"></i>\n              </div>\n            </li>\n          </ul>\n        </div>\n        <button>Translate Text</button>\n      </div>\n    </>\n  );\n};\n\nexport default Translate;\n","/home/aKASH/Documents/CodeClause/CodeClause-Live-Language-Translation/src/data.js",[],[],{"ruleId":"69","severity":1,"message":"70","line":15,"column":14,"nodeType":"71","messageId":"72","endLine":15,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":16,"column":28,"nodeType":"71","messageId":"72","endLine":16,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":19,"column":28,"nodeType":"71","messageId":"72","endLine":19,"endColumn":30},{"ruleId":"69","severity":1,"message":"70","line":69,"column":25,"nodeType":"71","messageId":"72","endLine":69,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":76,"column":25,"nodeType":"71","messageId":"72","endLine":76,"endColumn":27},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]